// 二倍图
@function decimalRound ($number, $digits: 0) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
      @warn '#{ $number } is not a number.';
      @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
      @warn '#{ $digits } is not a number.';
      @return $number;
  } @else if not unitless($digits) {
      @warn '#{ $digits } has a unit.';
      @return $number;
  }
  @if $digits > 0 {
      @for $i from 1 through $digits {
          $n: $n * 10;
      }
  }
  @return calc(round($number * $n) / $n);
}
@function convertRpxToVw($t, $isDouble: false) {
  $result: 0;
  @if $isDouble {
    $result: calc($t / 750 * 100 * 2 * 1vw);
  } @else {
    $result: calc($t / 750 * 100 * 1vw);
  }
  @return  decimalRound($result, 1);
}